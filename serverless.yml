service: notes-api
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1


# enable access to createNote function via http 
# to make this an http endpoint, we add an events section 
# this events section ties our function to the API Gateway provided by AWS
functions:
  createNote:
    handler: index.createNote
    iamRoleStatements: 
      - Effect: Allow
        Action: 
          - dynamodb:PutItem 
        Resource: !GetAtt notesTable.Arn
    events:
      - http:
          method: post
          path: "notes"
  updateNote:
    handler: index.updateNote
    events:
      - http:
          method: put
          path: "notes/{id}"
  deleteNote:
    handler: index.deleteNote
    events:
      - http:
          method: delete
          path: "notes/{id}"
  getAllNotes:
    handler: index.getAllNotes
    events:
      - http:
          method: get
          path: "notes"
plugins: 
  - serverless-iam-roles-per-function
# you can add CloudFormation resource templates here
resources:
  Resources:
    notesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: notes
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: notesId
            AttributeType: S
        KeySchema:
          - AttributeName: notesId
            KeyType: HASH


        

